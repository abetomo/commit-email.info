- hosts: servers
  become: yes
  vars:
    admin_user: kou
    web_hooks_receiver_user: mailer
    github_event_watcher_user: watcher
    ruby_api_version: 2.1.0
    passenger_version: 5.0.9
  tasks:
    # Base
    - name: Upgrade packages
      apt:
        update_cache=yes
        cache_valid_time=3600
        upgrade=safe
    - name: Install base packages
      apt: name={{ item }}
      with_items:
        - apt-listchanges
        - vim
        - zsh
        - git
        - lv
        - acpid
        - ruby
    - name: Use VIM as the default editor
      command: update-alternatives --set editor /usr/bin/vim.basic
    - name: Use e-mail for apt-listchanges
      copy:
        src=files/listchanges.conf
        dest=/etc/apt/listchanges.conf
    - name: Install Groonga APT repository
      apt_repository:
        repo="deb http://packages.groonga.org/debian/ jessie main"
    - name: Install GPG key for Groonga APT repository
      apt: name=groonga-keyring force=yes
      register: groonga_keyring
    - name: Force to update APT cache
      apt: update_cache=yes
      when: groonga_keyring.changed
    - name: Install Bundler
      gem: name=bundler user_install=no

    # Web hooks receiver
    - name: Create user for Web hooks receiver
      user: name={{ web_hooks_receiver_user }}
    - name: Put ~{{ web_hooks_receiver_user }}/.forward
      copy:
        content="root"
        dest=~{{ web_hooks_receiver_user }}/.forward
        owner={{ web_hooks_receiver_user }}
        group={{ web_hooks_receiver_user }}
    - name: Create directories
      file:
        path=~{{ web_hooks_receiver_user }}/{{ item }}
        state=directory
        owner={{ web_hooks_receiver_user }}
        group={{ web_hooks_receiver_user }}
      with_items:
        - web-hooks-receiver/
        - web-hooks-receiver/public/
        - web-hooks-receiver/tmp/
    - name: Put configuration files
      copy:
        src=files/web-hooks-receiver/{{ item }}
        dest=~{{ web_hooks_receiver_user }}/web-hooks-receiver/{{ item }}
        owner={{ web_hooks_receiver_user }}
        group={{ web_hooks_receiver_user }}
      with_items:
        - config.yaml
        - Gemfile
        - Gemfile.lock
        - config.ru
      register: web_hooks_receiver_config_files
    - name: Install packages for Web hooks receiver
      apt: name={{ item }}
      with_items:
        - gcc
        - make
        - ruby-dev
        - libgroonga-dev
        - libffi-dev
    - name: Update gems
      shell: sudo -u {{ web_hooks_receiver_user }} -H bundle install --deployment --binstubs
      args:
        chdir: ~{{ web_hooks_receiver_user }}/web-hooks-receiver/
      notify:
        - Restart Web hooks receiver
      when: web_hooks_receiver_config_files.changed

    # GitHub event watcher
    - name: Create user for GitHub event watcher
      user: name={{ github_event_watcher_user }}
    - name: Put ~{{ github_event_watcher_user }}/.forward
      copy:
        content="root"
        dest=~{{ github_event_watcher_user }}/.forward
        owner={{ github_event_watcher_user }}
        group={{ github_event_watcher_user }}
    - name: Create directories
      file:
        path=~{{ github_event_watcher_user }}/{{ item }}
        state=directory
        owner={{ github_event_watcher_user }}
        group={{ github_event_watcher_user }}
      with_items:
        - github-event-watcher/
    - name: Put configuration files
      copy:
        src=files/github-event-watcher/{{ item }}
        dest=~{{ github_event_watcher_user }}/github-event-watcher/{{ item }}
        owner={{ github_event_watcher_user }}
        group={{ github_event_watcher_user }}
      with_items:
        - config.yaml
        - Gemfile
        - Gemfile.lock
      register: github_event_watcher_config_files
    - name: Update gems
      shell: sudo -u {{ github_event_watcher_user }} -H bundle install --deployment --binstubs
      args:
        chdir: ~{{ github_event_watcher_user }}/github-event-watcher/
      notify:
        - Restart GitHub event watcher
      when: github_event_watcher_config_files.changed
    - name: Put logrotate configuraition
      template:
        src=files/github-event-watcher/logrotate/github-event-watcher
        dest=/etc/logrotate.d/github-event-watcher
    - name: Install .service
      template:
        src=files/github-event-watcher/github-event-watcher.service
        dest=/lib/systemd/system/github-event-watcher.service
      notify:
        - Reload systemd
        - Restart GitHub event watcher

    # Apache
    - name: Install Apache and related packages
      apt: name={{ item }}
      with_items:
        - apache2
        - apache2-dev
        - libapr1-dev
        - libaprutil1-dev
        - libcurl4-openssl-dev
        - libssl-dev
    - name: Install Passenger
      gem: name=passenger version={{ passenger_version }} user_install=no
      register: passenger
    - name: Build Passenger
      command: sudo -H passenger-install-apache2-module --languages ruby --auto
      when: passenger.changed
    - name: Put Passenger configuration files
      template:
        src=files/apache/{{ item }}
        dest=/etc/apache2/mods-available/{{ item }}
      with_items:
        - passenger.conf
        - passenger.load
      register: passenger_config_files
    - name: Enable Passenger
      command: a2enmod passenger
      when: passenger_config_files.changed
    - name: Put Apache configuration file
      template:
        src=files/apache/{{ item }}
        dest=/etc/apache2/sites-available/{{ item }}
      with_items:
        - 000-default.conf
        - www.commit-email.info.conf
        - web-hooks-receiver.commit-email.info.conf
      register: apache_config_files
    - name: Put www.commit-email.info content
      template:
        src=files/apache/www/{{ item }}
        dest=/var/www/html/{{ item }}
      with_items:
        - index.html
        - style.css
    - name: Enable our Apache configurations
      command: a2ensite {{ item }}
      with_items:
        - 000-default
        - www.commit-email.info
        - web-hooks-receiver.commit-email.info
      notify:
        - Restart Apache
      when: apache_config_files.changed

    # QuickML
    - name: Install QuickML
      apt: name=quickml
    - name: Put QuickML configuration
      copy:
        src=files/quickml/quickmlrc
        dest=/etc/quickml/quickmlrc
      notify:
        - Restart QuickML

    # Postfix
    - name: Install Postfix
      apt: name=postfix
    - name: Set /etc/aliases
      template:
        src=files/aliases
        dest=/etc/aliases
      notify:
        - Update /etc/aliases
    - name: Set /etc/mailname
      copy:
        content="commit-email.info"
        dest=/etc/mailname
    - name: Put Postfix configuration
      copy:
        src=files/postfix/{{ item }}
        dest=/etc/postfix/{{ item }}
      with_items:
        - transport_maps
        - main.cf
      notify:
        - Update /etc/postfix/transport_maps
        - Restart Postfix

  handlers:
    - name: Restart Web hooks receiver
      file:
        path=/home/{{ web_hooks_receiver_user }}/web-hooks-receiver/tmp/restart.txt
        state=touch
        owner={{ web_hooks_receiver_user }}
        group={{ web_hooks_receiver_user }}
    - name: Reload systemd
      command: systemctl daemon-reload
    - name: Restart GitHub event watcher
      service: name=github-event-watcher state=restarted
    - name: Restart Apache
      service: name=apache2 state=restarted
    - name: Restart QuickML
      service: name=quickml state=restarted
    - name: Update /etc/aliases
      command: postalias /etc/aliases
    - name: Update /etc/postfix/transport_maps
      command: postmap /etc/postfix/transport_maps
    - name: Restart Postfix
      service: name=postfix state=restarted
